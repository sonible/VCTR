name: üë∑‚Äç Unit Tests

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [develop]

jobs:
  unit_tests:
    strategy:
      matrix:
        configs:
          - runner: ubuntu-22.04
            cc: clang-15
            cxx: clang++-15
            ipp: no_ipp

          - runner: ubuntu-22.04
            cc: gcc-12
            cxx: g++-12
            ipp: no_ipp

          - runner: ubuntu-22.04
            cc: clang-15
            cxx: clang++-15
            ipp: ipp

          - runner: ubuntu-22.04
            cc: gcc-12
            cxx: g++-12
            ipp: ipp

          - runner: windows-2022
            cc: cl
            cxx: cl
            ipp: no_ipp

          - runner: windows-2022
            cc: clang-cl
            cxx: clang-cl
            ipp: no_ipp

          - runner: windows-2022
            cc: clang
            cxx: clang++
            ipp: no_ipp

          #   Not supported yet
          # - runner: windows-2022
          #   cc: gcc
          #   cxx: g++
          #   ipp: no_ipp

          - runner: windows-2022
            cc: cl
            cxx: cl
            ipp: ipp

          - runner: windows-2022
            cc: clang-cl
            cxx: clang-cl
            ipp: ipp

          - runner: windows-2022
            cc: clang
            cxx: clang++
            ipp: ipp

          #   Not supported yet
          # - runner: windows-2022
          #   cc: gcc
          #   cxx: g++
          #   ipp: no_ipp

          - runner: macos-12
            cc: clang
            cxx: clang++
            ipp: no_ipp

          - runner: macos-12
            cc: /usr/local/opt/llvm/bin/clang
            cxx: /usr/local/opt/llvm/bin/clang++
            ipp: no_ipp

          #   Not supported yet
          # - runner: [self-hosted, macOS, X64]
          #   cc: /usr/local/opt/gcc/bin/gcc-12
          #   cxx: /usr/local/opt/gcc/bin/g++-12
          #   ipp: no_ipp

          - runner: macos-12
            cc: clang
            cxx: clang++
            ipp: ipp

          - runner: macos-12
            cc: /usr/local/opt/llvm/bin/clang
            cxx: /usr/local/opt/llvm/bin/clang++
            ipp: ipp

          #   Not supported yet
          # - runner: [self-hosted, macOS, X64]
          #   cc: /usr/local/opt/gcc/bin/gcc-12
          #   cxx: /usr/local/opt/gcc/bin/g++-12
          #   ipp: ipp

          #   Supported, Github does not provide ARM-based runners yet
          # - runner: [self-hosted, macOS, ARM64]
          #   cc: clang
          #   cxx: clang++
          #   ipp: no_ipp

          #   Supported, Github does not provide ARM-based runners yet
          # - runner: [self-hosted, macOS, ARM64]
          #   cc: /opt/homebrew/opt/llvm/bin/clang
          #   cxx: /opt/homebrew/opt/llvm/bin/clang++
          #   ipp: no_ipp

          #   Not supported yet
          # - runner: [self-hosted, macOS, ARM64]
          #   cc: /opt/homebrew/opt/gcc/bin/gcc-12
          #   cxx: /opt/homebrew/opt/gcc/bin/g++-12
          #   ipp: no_ipp

      fail-fast: false

    runs-on: ${{ matrix.configs.runner }}

    steps:
      - name: Checkout sources
        uses: actions/checkout@v3

      - name: (Linux) Install dependencies
        run: sudo apt-get install gcc-12 g++-12 ninja-build && wget https://apt.llvm.org/llvm.sh && chmod +x llvm.sh && sudo ./llvm.sh 15 all && pip3 install conan
        if: runner.os == 'Linux'

      - name: (macOS) Install dependencies
        run: brew install conan ninja llvm@15 gcc@12 z3
        if: runner.os == 'macOS'

      - name: (Windows) Install dependencies
        run: choco install llvm --version 15.0.4 -y && choco install ninja -y && pip3 install conan
        if: runner.os == 'Windows'

      - name: (Windows) Configure dev environment variables
        uses: ilammy/msvc-dev-cmd@v1
        if: runner.os == 'Windows'

      - name: Install IPP
        run: pip3 install ipp-static
        if: matrix.configs.ipp == 'ipp'

      # VCTR_USE_IPP uses fake ternary operator
      # More details here: https://github.com/actions/runner/issues/409#issuecomment-752775072
      - name: Configure CMake
        run: cmake . -B build -G Ninja -D CMAKE_BUILD_TYPE=Release -D VCTR_BUILD_TEST=1 -D VCTR_USE_CONAN=1 -D VCTR_USE_IPP=${{ matrix.configs.ipp == 'ipp' && '1' || '0' }}
        env:
          CC: ${{ matrix.configs.cc }}
          CXX: ${{ matrix.configs.cxx }}

      - name: Build
        run: cmake --build build/ --target vctr_test

      - name: Change execution permissions if necessary
        run: chmod +x ./build/test/vctr_test
        if: runner.os != 'Windows'

      - name: Run test
        run: ./build/test/vctr_test
